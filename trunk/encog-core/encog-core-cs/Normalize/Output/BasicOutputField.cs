using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Encog.Persist.Attributes;

namespace Encog.Normalize.Output
{
    /// <summary>
    /// Provides very basic functionality for output fields.  Primarily provides
    /// the ideal instance variable.
    /// </summary>
    public abstract class BasicOutputField : IOutputField
    {
        /// <summary>
        /// Is this field part of the ideal data uses to train the
        /// neural network.
        /// </summary>
        [EGAttribute]
        private bool ideal;

        /// <summary>
        /// Init this field for a new row.
        /// </summary>
        public abstract void RowInit();

        /// <summary>
        /// The numebr of fields that will actually be generated by 
        /// this field. For a simple field, this value is 1.
        /// </summary>
        public abstract int SubfieldCount { get; }

        /// <summary>
        /// Calculate the value for this field.  Specify subfield of zero
        /// if this is a simple field.
        /// </summary>
        /// <param name="subfield"> The subfield index.</param>
        /// <returns>The calculated value for this field.</returns>
        public abstract double Calculate(int subfield);

        /// <summary>
        /// Is this field part of the ideal data uses to train the
        /// neural network.
        /// </summary>
        public bool Ideal
        {
            get
            {
                return this.ideal;
            }
            set
            {
                this.ideal = value;
            }
        }
    }
}
