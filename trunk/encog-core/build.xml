<!-- 
 Encog Artificial Intelligence Framework v2.x
 .Net Version
 http://www.heatonresearch.com/encog/
 http://code.google.com/p/encog-java/
  
 Copyright 2008-2010, Heaton Research Inc., and individual contributors.
 See the copyright.txt in the distribution for a full listing of 
 individual contributors.
 
 This is free software; you can redistribute it and/or modify it
 under the terms of the GNU Lesser General Public License as
 published by the Free Software Foundation; either version 2.1 of
 the License, or (at your option) any later version.
 
 This software is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 Lesser General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public
 License along with this software; if not, write to the Free
 Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<project name="encog-core" default="dist" basedir="."  xmlns:dn="antlib:org.apache.ant.dotnet">
	<description>
        Build the core DLL file for Encog.
    </description>
	<!-- set global properties for this build -->
	<property name="path.src" location="${basedir}/encog-core-cs" />
	<property name="path.build" location="${basedir}/encog-core-cs/encog-core-cs/bin/Release" />
	<property name="path.bin" location="${path.src}/bin" />
	<property name="path.obj" location="${path.src}/obj" />
	<property name="path.dist" location="${basedir}/dist" />
	<property name="path.stage" location="${basedir}/stage" />
	<property name="path.doc" location="${basedir}/doc" />

	<target name="checkout" depends="init">
		<exec executable="svn">
			<arg value="checkout" />
			<arg value="http://encog-cs.googlecode.com/svn/trunk/encog-core" />
			<arg value="${basedir}" />
		</exec>
	</target>

	<target name="init">
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${path.doc}" />
	</target>

	<target name="doc" depends="msbuild" description="produce MSDN style CHM file ">
		<!-- <dn:msbuild buildfile="${basedir}\encog-core.shfbproj">
		</dn:msbuild> -->
	</target>

	<target name="msbuild" depends="init" description="generate the distribution">

		<loadfile srcfile="${path.src}\EncogFramework.cs" property="build.version">
			<filterchain>
				<linecontainsregexp>
					<regexp pattern='^.*String VERSION = ".*";.*$' />
				</linecontainsregexp>
				<tokenfilter>
					<replaceregex replace='\1' pattern='^.*String VERSION = "(.*)";.*$' />
				</tokenfilter>
				<striplinebreaks />
			</filterchain>
		</loadfile>

		<!-- Create the distribution directory -->
		<mkdir dir="${path.dist}" />
		<mkdir dir="${path.stage}" />

		<dn:msbuild buildfile="${path.src}\encog-core-cs.csproj">
			<property name="Configuration" value="Release"/>
		</dn:msbuild>

	</target>

	<target name="cc-build" depends="clean-all,checkout,msbuild,doc">

		<copy todir="${path.stage}" file="${basedir}/copyright.txt" />
		<copy todir="${path.stage}" file="${basedir}/build.xml" />
		<copy todir="${path.stage}" file="${basedir}/encog-core-cs.sln" />
		<copy todir="${path.stage}" file="${basedir}/encog-core-cs.suo" />
		<copy todir="${path.stage}" file="${basedir}/log4net.dll" />


		<copy todir="${path.stage}/src">
			<fileset dir="${basedir}" />
		</copy>
		<delete dir="${path.stage}/src/stage" />
		<delete dir="${path.stage}/src/doc" />
		<delete dir="${path.stage}/src/stage" />
		<delete dir="${path.stage}/src/dist" />
		
		<copy todir="${path.stage}/dll" file="${basedir}/log4net.dll" />
		<copy todir="${path.stage}/dll" file="${basedir}/Cloo.dll" />
		<copy todir="${path.stage}/dll" file="encog-core-cs/bin/Release/encog-core-cs.dll"/>
		<!-- <copy todir="${path.stage}" file="${path.doc}/EncogDotNet.chm"/> -->
		<copy todir="${path.stage}" file="${basedir}/IntroductionToEncogCS.pdf"/>
		
		<delete dir="${path.stage}/src/bin" />
		<delete dir="${path.stage}/src/obj" />

		<tstamp/>
		
		<zip destfile="${path.dist}/encog-core-dotnet-${build.version}-${DSTAMP}-${TSTAMP}.zip">
			<fileset dir="${path.stage}" />
		</zip>

	</target>

	<target name="clean-all" depends="clean" description="Delete the source code">
		<delete dir="${path.src}" />
		<delete>
			<fileset dir="${basedir}" excludes="build.xml" />
		</delete>
	</target>

	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${path.stage}" />
		<delete dir="${path.bin}" />
		<delete dir="${path.obj}" />		
		<delete dir="${path.dist}" />
		<delete dir="${path.doc}" />
	</target>
</project>