/*
 * Encog(tm) Core v3.0 - Java Version
 * http://www.heatonresearch.com/encog/
 * http://code.google.com/p/encog-java/
 
 * Copyright 2008-2011 Heaton Research, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *   
 * For more information on Heaton Research copyrights, licenses 
 * and trademarks visit:
 * http://www.heatonresearch.com/copyright
 */
// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110331_01     
// 5/5/11 3:32 PM    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
using System;

namespace Encog.App.Analyst.CSV.Basic
{
    /// <summary>
    /// A basic cached column. Used internally by some of the Encog CSV quant
    /// classes. All of the file contents for this column are loaded into memory.
    /// </summary>
    ///
    public class BaseCachedColumn
    {
        /// <summary>
        /// The data for this column.
        /// </summary>
        ///
        private double[] data;

        /// <summary>
        /// Construct the cached column.
        /// </summary>
        ///
        /// <param name="theName">The name of the column.</param>
        /// <param name="theInput">Is this column used for input?</param>
        /// <param name="theOutput">Is this column used for output?</param>
        public BaseCachedColumn(String theName, bool theInput,
                                bool theOutput)
        {
            Name = theName;
            Input = theInput;
            Output = theOutput;
            Ignore = false;
        }


        /// <value>The data for this column.</value>
        public double[] Data
        {
            /// <returns>The data for this column.</returns>
            get { return data; }
        }


        /// <summary>
        /// Set the name of this column.
        /// </summary>
        ///
        /// <value>The name of this column.</value>
        public String Name { /// <returns>The name of this column</returns>
            get; /// <summary>
            /// Set the name of this column.
            /// </summary>
            ///
            /// <param name="theName">The name of this column.</param>
            set; }


        /// <summary>
        /// Set if this column is to be ignored?
        /// </summary>
        ///
        /// <value>True, if this column is to be ignored.</value>
        public bool Ignore { /// <returns>Is this column ignored?</returns>
            get; /// <summary>
            /// Set if this column is to be ignored?
            /// </summary>
            ///
            /// <param name="theIgnore">True, if this column is to be ignored.</param>
            set; }


        /// <summary>
        /// Set if this column is used for input.
        /// </summary>
        ///
        /// <value>Is this column used for input.</value>
        public bool Input { /// <returns>Is this column used for input?</returns>
            get; /// <summary>
            /// Set if this column is used for input.
            /// </summary>
            ///
            /// <param name="theIgnore">Is this column used for input.</param>
            set; }


        /// <summary>
        /// Set if this column is used for output.
        /// </summary>
        ///
        /// <value>Is this column used for output.</value>
        public bool Output { /// <returns>Is this column used for output?</returns>
            get; /// <summary>
            /// Set if this column is used for output.
            /// </summary>
            ///
            /// <param name="theOutput">Is this column used for output.</param>
            set; }

        /// <summary>
        /// Allocate enough space for this column.
        /// </summary>
        ///
        /// <param name="length">The length of this column.</param>
        public void Allocate(int length)
        {
            data = new double[length];
        }
    }
}